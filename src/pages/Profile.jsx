import { useEffect, useState } from "react";
import { Container, Row, Col, Form, Button, Spinner } from "react-bootstrap";
import { toast } from "react-toastify";
import userApi from "../api/userApi";

const Profile = () => {
  const [loading, setLoading] = useState(true);
  const [updating, setUpdating] = useState(false);
  const [user, setUser] = useState({
    name: "",
    email: "",
    phone: "",
    address: "",
    password: "",
  });

  // ‚úÖ L·∫•y token ri√™ng v√† user info ri√™ng
  const token = localStorage.getItem("token");
  const userInfo = JSON.parse(localStorage.getItem("userInfo"));

  // üü¢ L·∫•y th√¥ng tin user khi v√†o trang
  useEffect(() => {
    const fetchProfile = async () => {
      try {
        if (!token) {
          toast.error("Vui l√≤ng ƒëƒÉng nh·∫≠p!");
          return;
        }
        const res = await userApi.getProfile(token); // ‚úÖ d√πng token ri√™ng
        setUser({
          name: res.data.name || "",
          email: res.data.email || "",
          phone: res.data.phone || "",
          address: res.data.address || "",
          password: "",
        });
      } catch (error) {
        toast.error("Kh√¥ng th·ªÉ t·∫£i th√¥ng tin ng∆∞·ªùi d√πng");
      } finally {
        setLoading(false);
      }
    };
    fetchProfile();
  }, [token]);

  // üü£ C·∫≠p nh·∫≠t profile
  const handleSubmit = async (e) => {
    e.preventDefault();
    try {
      setUpdating(true);
      const res = await userApi.updateProfile(user, token); // ‚úÖ d√πng token ri√™ng
      toast.success("C·∫≠p nh·∫≠t th√¥ng tin th√†nh c√¥ng!");

      // c·∫≠p nh·∫≠t localStorage userInfo
      localStorage.setItem("userInfo", JSON.stringify(res.data.user));
    } catch (error) {
      toast.error(error.response?.data?.message || "C·∫≠p nh·∫≠t th·∫•t b·∫°i");
    } finally {
      setUpdating(false);
    }
  };

  if (loading)
    return (
      <div className="text-center py-5">
        <Spinner animation="border" />
      </div>
    );

  return (
    <Container className="my-5">
      <Row className="justify-content-center">
        <Col md={6}>
          <h2 className="text-center mb-4">üë§ Th√¥ng tin c√° nh√¢n</h2>

          <Form onSubmit={handleSubmit}>
            <Form.Group className="mb-3">
              <Form.Label>H·ªç v√† t√™n</Form.Label>
              <Form.Control
                type="text"
                value={user.name}
                onChange={(e) => setUser({ ...user, name: e.target.value })}
                required
              />
            </Form.Group>

            <Form.Group className="mb-3">
              <Form.Label>Email</Form.Label>
              <Form.Control type="email" value={user.email} disabled />
            </Form.Group>

            <Form.Group className="mb-3">
              <Form.Label>S·ªë ƒëi·ªán tho·∫°i</Form.Label>
              <Form.Control
                type="text"
                value={user.phone}
                onChange={(e) => setUser({ ...user, phone: e.target.value })}
              />
            </Form.Group>

            <Form.Group className="mb-3">
              <Form.Label>ƒê·ªãa ch·ªâ</Form.Label>
              <Form.Control
                type="text"
                value={user.address}
                onChange={(e) => setUser({ ...user, address: e.target.value })}
              />
            </Form.Group>

            <Form.Group className="mb-3">
              <Form.Label>M·∫≠t kh·∫©u m·ªõi (n·∫øu mu·ªën ƒë·ªïi)</Form.Label>
              <Form.Control
                type="password"
                value={user.password}
                onChange={(e) => setUser({ ...user, password: e.target.value })}
                placeholder="ƒê·ªÉ tr·ªëng n·∫øu kh√¥ng ƒë·ªïi m·∫≠t kh·∫©u"
              />
            </Form.Group>

            <div className="text-center">
              <Button type="submit" variant="primary" disabled={updating}>
                {updating ? "ƒêang c·∫≠p nh·∫≠t..." : "C·∫≠p nh·∫≠t th√¥ng tin"}
              </Button>
            </div>
          </Form>
        </Col>
      </Row>
    </Container>
  );
};

export default Profile;
